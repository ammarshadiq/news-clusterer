/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJDialog.java
 *
 * Created on Jan 10, 2011, 11:45:44 AM
 */

package newsclusteringlucene.phrasesextractor;

import java.io.File;
import javax.swing.JFileChooser;

/**
 *
 * @author shadiq
 */
public class IndPOSTaggerConfigViewDialog extends javax.swing.JDialog {

    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;

    private static int returnStatus = RET_CANCEL;

    /** Creates new form NewJDialog */
    public IndPOSTaggerConfigViewDialog(java.awt.Frame parent, boolean modal, IndPOSTagger indPOSTagger) {
        super(parent, modal);
        // backup the data before edit, so when the user hit Cancel button, this backup data is returned
        this.indPOSTaggerConfigBackup = indPOSTagger.getIndPOSTaggerConfig();
        
        IndPOSTaggerConfigViewDialog.indPOSTaggerConfigEdit = indPOSTagger.getIndPOSTaggerConfig().clone();

        initComponents();
        chooser = new JFileChooser();

        lexiconFileTextField.setText(IndPOSTaggerConfigViewDialog.indPOSTaggerConfigEdit.getLexiconFile().getAbsolutePath());
        nGramFileTextField.setText(IndPOSTaggerConfigViewDialog.indPOSTaggerConfigEdit.getnGramFile().getAbsolutePath());
        nGramLanguageModelComboBox.setSelectedIndex(IndPOSTaggerConfigViewDialog.indPOSTaggerConfigEdit.getnGramLanguageModel());
        maxAffixLengthSpinner.setValue(IndPOSTaggerConfigViewDialog.indPOSTaggerConfigEdit.getMaxAffixTreeLength());
        affixTreePruningTresholdSpinner.setValue(IndPOSTaggerConfigViewDialog.indPOSTaggerConfigEdit.getAffixTreePruningTreshold());
        affixTreeMinWordSpinner.setValue(IndPOSTaggerConfigViewDialog.indPOSTaggerConfigEdit.getAffixTreeMinWord());
        affixTreeTypeComboBox.setSelectedIndex(IndPOSTaggerConfigViewDialog.indPOSTaggerConfigEdit.getAffixTreeType());
        biGramSmoothingSpinner.setValue(IndPOSTaggerConfigViewDialog.indPOSTaggerConfigEdit.getJelinecMercerBigramSmoothing());
        hmmTwoPhaseTypeComboBox.setSelectedIndex(IndPOSTaggerConfigViewDialog.indPOSTaggerConfigEdit.getHmmTwoPhaseType());
        if (IndPOSTaggerConfigViewDialog.indPOSTaggerConfigEdit.getUseKBBILexicon() == 0){
            useKBBILexiconCheckBox.setSelected(false);
        } else {
            useKBBILexiconCheckBox.setSelected(true);
        }
        tagSetFileTextField.setText(IndPOSTaggerConfigViewDialog.indPOSTaggerConfigEdit.getTagSetFile().getAbsolutePath());
    }

    public static int showDialog(java.awt.Frame parent, boolean modal, IndPOSTagger indPOSTagger){
        indPOSTaggerConfigViewDialog = new IndPOSTaggerConfigViewDialog(parent, modal, indPOSTagger);
        indPOSTaggerConfigViewDialog.setLocationRelativeTo(parent);
        indPOSTaggerConfigViewDialog.setVisible(true);
        return returnStatus;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lexiconFileLabel = new javax.swing.JLabel();
        lexiconFileTextField = new javax.swing.JTextField();
        beamSearchdecoderSpinner = new javax.swing.JSpinner();
        beamSearchdecoderLabel = new javax.swing.JLabel();
        hmmTwoPhaseTypeComboBox = new javax.swing.JComboBox();
        hmmTwoPhaseTypeLabel = new javax.swing.JLabel();
        biGramSmoothingSpinner = new javax.swing.JSpinner();
        biGramSmoothingLabel = new javax.swing.JLabel();
        affixTreeTypeComboBox = new javax.swing.JComboBox();
        affixTreeTypeLabel = new javax.swing.JLabel();
        affixTreeMinWordLabel = new javax.swing.JLabel();
        affixTreeMinWordSpinner = new javax.swing.JSpinner();
        nGramFileButton = new javax.swing.JButton();
        nGramLanguageModelLabel = new javax.swing.JLabel();
        nGramLanguageModelComboBox = new javax.swing.JComboBox();
        maxAffixLengthLabel = new javax.swing.JLabel();
        maxAffixLengthSpinner = new javax.swing.JSpinner();
        affixTreePruningTresholdLabel = new javax.swing.JLabel();
        affixTreePruningTresholdSpinner = new javax.swing.JSpinner();
        jSeparator1 = new javax.swing.JSeparator();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        useKBBILexiconCheckBox = new javax.swing.JCheckBox();
        lexiconFileButton = new javax.swing.JButton();
        nGramFileTextField = new javax.swing.JTextField();
        nGramFileLabel = new javax.swing.JLabel();
        useKBBILexiconLabel = new javax.swing.JLabel();
        tagSetFileLabel = new javax.swing.JLabel();
        tagSetFileTextField = new javax.swing.JTextField();
        tagSetFileButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(newsclusteringlucene.NewsClusteringLuceneApp.class).getContext().getResourceMap(IndPOSTaggerConfigViewDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setModal(true);
        setModalityType(java.awt.Dialog.ModalityType.TOOLKIT_MODAL);
        setName("Form"); // NOI18N
        setResizable(false);

        lexiconFileLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lexiconFileLabel.setText(resourceMap.getString("lexiconFileLabel.text")); // NOI18N
        lexiconFileLabel.setName("lexiconFileLabel"); // NOI18N

        lexiconFileTextField.setName("lexiconFileTextField"); // NOI18N

        beamSearchdecoderSpinner.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(500.0d), Double.valueOf(0.0d), null, Double.valueOf(1.0d)));
        beamSearchdecoderSpinner.setName("beamSearchdecoderSpinner"); // NOI18N

        beamSearchdecoderLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        beamSearchdecoderLabel.setText(resourceMap.getString("beamSearchdecoderLabel.text")); // NOI18N
        beamSearchdecoderLabel.setName("beamSearchdecoderLabel"); // NOI18N

        hmmTwoPhaseTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Not Used", "tn-1,tn,tn+1", "tn-2,tn-1,tn,tn+1" }));
        hmmTwoPhaseTypeComboBox.setName("hmmTwoPhaseTypeComboBox"); // NOI18N

        hmmTwoPhaseTypeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        hmmTwoPhaseTypeLabel.setText(resourceMap.getString("hmmTwoPhaseTypeLabel.text")); // NOI18N
        hmmTwoPhaseTypeLabel.setName("hmmTwoPhaseTypeLabel"); // NOI18N

        biGramSmoothingSpinner.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(0.2d), Double.valueOf(0.0d), null, Double.valueOf(0.01d)));
        biGramSmoothingSpinner.setName("biGramSmoothingSpinner"); // NOI18N

        biGramSmoothingLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        biGramSmoothingLabel.setText(resourceMap.getString("biGramSmoothingLabel.text")); // NOI18N
        biGramSmoothingLabel.setName("biGramSmoothingLabel"); // NOI18N

        affixTreeTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Prefix", "Suffix", "Prefix-suffix" }));
        affixTreeTypeComboBox.setName("affixTreeTypeComboBox"); // NOI18N

        affixTreeTypeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        affixTreeTypeLabel.setText(resourceMap.getString("affixTreeTypeLabel.text")); // NOI18N
        affixTreeTypeLabel.setName("affixTreeTypeLabel"); // NOI18N

        affixTreeMinWordLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        affixTreeMinWordLabel.setText(resourceMap.getString("affixTreeMinWordLabel.text")); // NOI18N
        affixTreeMinWordLabel.setName("affixTreeMinWordLabel"); // NOI18N

        affixTreeMinWordSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        affixTreeMinWordSpinner.setName("affixTreeMinWordSpinner"); // NOI18N

        nGramFileButton.setText(resourceMap.getString("nGramFileButton.text")); // NOI18N
        nGramFileButton.setName("nGramFileButton"); // NOI18N
        nGramFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nGramFileButtonActionPerformed(evt);
            }
        });

        nGramLanguageModelLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nGramLanguageModelLabel.setText(resourceMap.getString("nGramLanguageModelLabel.text")); // NOI18N
        nGramLanguageModelLabel.setName("nGramLanguageModelLabel"); // NOI18N

        nGramLanguageModelComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Bi-Gram", "Tri-Gram" }));
        nGramLanguageModelComboBox.setName("nGramLanguageModelComboBox"); // NOI18N

        maxAffixLengthLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        maxAffixLengthLabel.setText(resourceMap.getString("maxAffixLengthLabel.text")); // NOI18N
        maxAffixLengthLabel.setName("maxAffixLengthLabel"); // NOI18N

        maxAffixLengthSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(3), Integer.valueOf(0), null, Integer.valueOf(1)));
        maxAffixLengthSpinner.setName("maxAffixLengthSpinner"); // NOI18N

        affixTreePruningTresholdLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        affixTreePruningTresholdLabel.setText(resourceMap.getString("affixTreePruningTresholdLabel.text")); // NOI18N
        affixTreePruningTresholdLabel.setName("affixTreePruningTresholdLabel"); // NOI18N

        affixTreePruningTresholdSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(3), Integer.valueOf(0), null, Integer.valueOf(1)));
        affixTreePruningTresholdSpinner.setName("affixTreePruningTresholdSpinner"); // NOI18N

        jSeparator1.setName("jSeparator1"); // NOI18N

        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText(resourceMap.getString("okButton.text")); // NOI18N
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        useKBBILexiconCheckBox.setText(resourceMap.getString("useKBBILexiconCheckBox.text")); // NOI18N
        useKBBILexiconCheckBox.setName("useKBBILexiconCheckBox"); // NOI18N

        lexiconFileButton.setText(resourceMap.getString("lexiconFileButton.text")); // NOI18N
        lexiconFileButton.setName("lexiconFileButton"); // NOI18N
        lexiconFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lexiconFileButtonActionPerformed(evt);
            }
        });

        nGramFileTextField.setName("nGramFileTextField"); // NOI18N

        nGramFileLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nGramFileLabel.setText(resourceMap.getString("nGramFileLabel.text")); // NOI18N
        nGramFileLabel.setName("nGramFileLabel"); // NOI18N

        useKBBILexiconLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        useKBBILexiconLabel.setText(resourceMap.getString("useKBBILexiconLabel.text")); // NOI18N
        useKBBILexiconLabel.setName("useKBBILexiconLabel"); // NOI18N

        tagSetFileLabel.setText(resourceMap.getString("tagSetFileLabel.text")); // NOI18N
        tagSetFileLabel.setName("tagSetFileLabel"); // NOI18N

        tagSetFileTextField.setText(resourceMap.getString("tagSetFileTextField.text")); // NOI18N
        tagSetFileTextField.setName("tagSetFileTextField"); // NOI18N

        tagSetFileButton.setText(resourceMap.getString("tagSetFileButton.text")); // NOI18N
        tagSetFileButton.setName("tagSetFileButton"); // NOI18N
        tagSetFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tagSetFileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(okButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tagSetFileLabel)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(useKBBILexiconLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(beamSearchdecoderLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(hmmTwoPhaseTypeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lexiconFileLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nGramFileLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nGramLanguageModelLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(maxAffixLengthLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(affixTreePruningTresholdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(affixTreeMinWordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(affixTreeTypeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(biGramSmoothingLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(tagSetFileTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tagSetFileButton))
                            .addComponent(useKBBILexiconCheckBox)
                            .addComponent(maxAffixLengthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(beamSearchdecoderSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(affixTreeMinWordSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(affixTreePruningTresholdSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(affixTreeTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(biGramSmoothingSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(nGramFileTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                    .addComponent(lexiconFileTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lexiconFileButton, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(nGramFileButton, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(nGramLanguageModelComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(hmmTwoPhaseTypeComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lexiconFileLabel)
                    .addComponent(lexiconFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lexiconFileButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nGramFileLabel)
                    .addComponent(nGramFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nGramFileButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nGramLanguageModelLabel)
                    .addComponent(nGramLanguageModelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maxAffixLengthLabel)
                    .addComponent(maxAffixLengthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(affixTreePruningTresholdLabel)
                    .addComponent(affixTreePruningTresholdSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(affixTreeMinWordLabel)
                    .addComponent(affixTreeMinWordSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(affixTreeTypeLabel)
                    .addComponent(affixTreeTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(biGramSmoothingLabel)
                    .addComponent(biGramSmoothingSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hmmTwoPhaseTypeLabel)
                    .addComponent(hmmTwoPhaseTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(beamSearchdecoderLabel)
                    .addComponent(beamSearchdecoderSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(useKBBILexiconLabel)
                    .addComponent(useKBBILexiconCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tagSetFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tagSetFileButton)
                    .addComponent(tagSetFileLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 6, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nGramFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nGramFileButtonActionPerformed
        int r = chooser.showOpenDialog(this);
        if (r != javax.swing.JFileChooser.APPROVE_OPTION) {
            return;
        }
        nGramFileTextField.setText(chooser.getSelectedFile().getAbsolutePath());
}//GEN-LAST:event_nGramFileButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // present the previous patterns for the return value
        //close this window frame
        indPOSTaggerConfigEdit = indPOSTaggerConfigBackup;
        returnStatus = RET_CANCEL;
        indPOSTaggerConfigViewDialog.setVisible(false);
        indPOSTaggerConfigViewDialog.dispose();
}//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        indPOSTaggerConfigEdit.setLexiconFile(new File(lexiconFileTextField.getText()));
        indPOSTaggerConfigEdit.setnGramFile(new File(nGramFileTextField.getText()));
        indPOSTaggerConfigEdit.setnGramLanguageModel(nGramLanguageModelComboBox.getSelectedIndex());
        indPOSTaggerConfigEdit.setMaxAffixTreeLength(((Integer) maxAffixLengthSpinner.getValue()).intValue());
        indPOSTaggerConfigEdit.setAffixTreePruningTreshold(((Integer) affixTreePruningTresholdSpinner.getValue()).intValue());
        indPOSTaggerConfigEdit.setAffixTreeMinWord(((Integer) affixTreeMinWordSpinner.getValue()).intValue());
        indPOSTaggerConfigEdit.setAffixTreeType(affixTreeTypeComboBox.getSelectedIndex());
        indPOSTaggerConfigEdit.setJelinecMercerBigramSmoothing(((Double) biGramSmoothingSpinner.getValue()).doubleValue());
        indPOSTaggerConfigEdit.setHmmTwoPhaseType(hmmTwoPhaseTypeComboBox.getSelectedIndex());
        if(!useKBBILexiconCheckBox.isSelected())
            indPOSTaggerConfigEdit.setUseKBBILexicon(0);
        else
             indPOSTaggerConfigEdit.setUseKBBILexicon(1);
        indPOSTaggerConfigEdit.setTagSetFile(new File(tagSetFileTextField.getText()));
        indPOSTaggerConfigBackup = null;
        returnStatus = RET_OK;
        indPOSTaggerConfigViewDialog.setVisible(false);
        indPOSTaggerConfigViewDialog.dispose();
}//GEN-LAST:event_okButtonActionPerformed

    private void lexiconFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lexiconFileButtonActionPerformed
        int r = chooser.showOpenDialog(this);
        if (r != javax.swing.JFileChooser.APPROVE_OPTION) {
            return;
        }
        lexiconFileTextField.setText(chooser.getSelectedFile().getAbsolutePath());
}//GEN-LAST:event_lexiconFileButtonActionPerformed

    private void tagSetFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tagSetFileButtonActionPerformed
        int r = chooser.showOpenDialog(this);
        if (r != javax.swing.JFileChooser.APPROVE_OPTION) {
            return;
        }
        tagSetFileTextField.setText(chooser.getSelectedFile().getAbsolutePath());
    }//GEN-LAST:event_tagSetFileButtonActionPerformed

    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }

    public static IndPOSTaggerConfig getindPOSTaggerConfigEdit(){
        return indPOSTaggerConfigEdit;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel affixTreeMinWordLabel;
    private javax.swing.JSpinner affixTreeMinWordSpinner;
    private javax.swing.JLabel affixTreePruningTresholdLabel;
    private javax.swing.JSpinner affixTreePruningTresholdSpinner;
    private javax.swing.JComboBox affixTreeTypeComboBox;
    private javax.swing.JLabel affixTreeTypeLabel;
    private javax.swing.JLabel beamSearchdecoderLabel;
    private javax.swing.JSpinner beamSearchdecoderSpinner;
    private javax.swing.JLabel biGramSmoothingLabel;
    private javax.swing.JSpinner biGramSmoothingSpinner;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox hmmTwoPhaseTypeComboBox;
    private javax.swing.JLabel hmmTwoPhaseTypeLabel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton lexiconFileButton;
    private javax.swing.JLabel lexiconFileLabel;
    private javax.swing.JTextField lexiconFileTextField;
    private javax.swing.JLabel maxAffixLengthLabel;
    private javax.swing.JSpinner maxAffixLengthSpinner;
    private javax.swing.JButton nGramFileButton;
    private javax.swing.JLabel nGramFileLabel;
    private javax.swing.JTextField nGramFileTextField;
    private javax.swing.JComboBox nGramLanguageModelComboBox;
    private javax.swing.JLabel nGramLanguageModelLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JButton tagSetFileButton;
    private javax.swing.JLabel tagSetFileLabel;
    private javax.swing.JTextField tagSetFileTextField;
    private javax.swing.JCheckBox useKBBILexiconCheckBox;
    private javax.swing.JLabel useKBBILexiconLabel;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JFileChooser chooser;

    private static IndPOSTaggerConfigViewDialog indPOSTaggerConfigViewDialog;
    private IndPOSTaggerConfig indPOSTaggerConfigBackup;
    private static IndPOSTaggerConfig indPOSTaggerConfigEdit;
}
